---
name: Release on version

on: 
  push:
    tags:
      - "*"

jobs:
  variable-dump:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  update-galaxy-version:
    name: Update Galaxy Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install yq
        run: pip3 install yq

      - name: Change galaxy version in the collection
        run: yq -i -y '.version = "${{ github.ref_name }}"' ./galaxy.yml 

      - name: Push the updated tag version to galaxy.yml
        uses: actions/checkout@v3

      - name: Push changes back to github
        run: |
          git config --global user.name "Rob Harris"
          git config --global user.email "harrisrp95@gmail.com"

          git add -A
          git commit -m "Update Ansible Galaxy version"
          git push

  super-lint:
    name: "Lint code base"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  molecule:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - default
    steps:
      - uses: actions/checkout@v3
        with:
          path: "${{ github.repository }}"
      - uses: gofrolist/molecule-action@v2
        with:
          molecule_working_dir: "${{ github.repository }}/roles/hello_world"
          molecule_command: test
          molecule_args: --scenario-name ${{ matrix.scenario }}
        env:
          ANSIBLE_FORCE_COLOR: '1'